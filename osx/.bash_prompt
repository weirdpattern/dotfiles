#!/bin/env bash

function git-prompt {    
  # Check if the current directory is in a git repository
  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; printf "%s" $?) == 0 ]; then

    # Check if the current directory is in .git before running git checks
    if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == "false" ]; then
      local status=""
      local branch=""
      local cyan=""
      local gray=""
      if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        tput sgr0 
        cyan=$(tput setaf 37)
        gray=$(tput setaf 7)    
      else
        cyan="\e[1;36m"
        gray="\e[1;30m"    
      fi
  
       
      # Ensure index is up to date
      git update-index --really-refresh -q &>/dev/null
      
      # Check for added files
      status="$status$(git diff --name-status --diff-filter=A --ignore-submodules | wc -l | tr -d ' ')+ "
      
      # Check for deleted files
      status="$status$(git diff --name-status --diff-filter=D --ignore-submodules | wc -l | tr -d ' ')- "

      # Check for modified files
      status="$status$(git diff --name-status --diff-filter=MR --ignore-submodules | wc -l | tr -d ' ')! "

      # Check for untracked files
      status="$status$(git ls-files --others --exclude-standard | wc -l | tr -d ' ')? "
      
      # Check for stashes
      status="$status$(git rev-parse --verify refs/stash &>/dev/null | wc -l | tr -d ' ')$" 
    fi

    # Get the short symbolic ref
    # If HEAD isn't a symbolic ref, get the short SHA
    # otherwise, just give up
    branch="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
              git rev-parse --short HEAD 2> /dev/null || \
              printf "(unknown)")"

    [ -n "$status" ] && status=" $gray[ $cyan$status $gray]"

    printf "%s" "$1$branch$status"
  fi
}

function prompt {
  local cyan=""
  local gray=""
  local green=""
  local red=""
  local reset=""
  local white=""
  
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    tput sgr0

    reset=$(tput sgr0)
    cyan=$(tput setaf 37)
    gray=$(tput setaf 7)
    green=$(tput setaf 64)
    red=$(tput setaf 124)
    white=$(tput setaf 15)
  else
    reset="\e[0m"
    cyan="\e[1;36m"
    gray="\e[1;30m"
    green="\e[1;32m"
    red="\e[1;31m"
    white="\e[1;37m"
  fi

  # Set the terminal title to the current working directory
  PS1="\[\033]0;\w\007\]"
  PS1+="\n" 
  PS1+="\[$red\]\u" #username
  PS1+="\[$gray\] @ "
  PS1+="\[$green\]\w" #directory
  PS1+="\$(git-prompt \"$gray on $cyan\")" #repository 
  PS1+="\n"
  PS1+="\[$red\]\$ \[$reset\]"
  export PS1
}

prompt
unset prompt
